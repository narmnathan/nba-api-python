fg3a <<- mean(gamelog$FG3A),
fg3_ratio <<- fg3m/fgm,
ftm <<- mean(gamelog$FTM),
fta <<- mean(gamelog$FTA),
ft_pct <<- mean(gamelog$FT_PCT),
# team retrievals
tm_min <<- mean(team_gamelog$MIN),
tm_pts <<- mean(team_gamelog$PTS),
tm_reb <<- mean(team_gamelog$REB),
tm_ast <<- mean(team_gamelog$AST),
tm_stl <<- mean(team_gamelog$STL),
tm_blk <<- mean(team_gamelog$BLK),
tm_tov <<- mean(team_gamelog$TOV),
tm_pf <<- mean(team_gamelog$PF),
tm_fg <<- mean(team_gamelog$FGM),
tm_fga <<- mean(team_gamelog$FGA),
tm_fta <<- mean(team_gamelog$FTA)
)
# STATS
retrievals <- list(
# player retrievals
min <<- mean(gamelog$MIN),
pts <<- mean(gamelog$PTS),
reb <<- mean(gamelog$REB),
oreb <<- mean(gamelog$OREB),
dreb <<- mean(gamelog$DREB),
oreb_ratio <<- oreb/reb,
dreb_ratio <<- dreb/reb,
ast <<- mean(gamelog$AST),
stl <<- mean(gamelog$STL),
blk <<- mean(gamelog$BLK),
tov <<- mean(gamelog$TOV),
pf <<- mean(gamelog$PF),
fgm <<- mean(gamelog$FGM),
fga <<- mean(gamelog$FGA),
fg3m <<- mean(gamelog$FG3M),
fg3a <<- mean(gamelog$FG3A),
fg3_ratio <<- fg3m/fgm,
ftm <<- mean(gamelog$FTM),
fta <<- mean(gamelog$FTA),
ft_pct <<- mean(gamelog$FT_PCT),
# team retrievals
tm_min <<- mean(team_gamelog$MIN),
tm_pts <<- mean(team_gamelog$PTS),
tm_reb <<- mean(team_gamelog$REB),
tm_ast <<- mean(team_gamelog$AST),
tm_stl <<- mean(team_gamelog$STL),
tm_blk <<- mean(team_gamelog$BLK),
tm_tov <<- mean(team_gamelog$TOV),
tm_pf <<- mean(team_gamelog$PF),
tm_fg <<- mean(team_gamelog$FGM),
tm_fga <<- mean(team_gamelog$FGA),
tm_fta <<- mean(team_gamelog$FTA)
)
# STATS
retrievals <- function() {
# player retrievals
min <<- mean(gamelog$MIN),
# STATS
retrievals <- function() {
# player retrievals
min <<- mean(gamelog$MIN)
pts <<- mean(gamelog$PTS)
reb <<- mean(gamelog$REB)
oreb <<- mean(gamelog$OREB)
dreb <<- mean(gamelog$DREB)
oreb_ratio <<- oreb/reb
dreb_ratio <<- dreb/reb
ast <<- mean(gamelog$AST)
stl <<- mean(gamelog$STL)
blk <<- mean(gamelog$BLK)
tov <<- mean(gamelog$TOV)
pf <<- mean(gamelog$PF)
fgm <<- mean(gamelog$FGM)
fga <<- mean(gamelog$FGA)
fg3m <<- mean(gamelog$FG3M)
fg3a <<- mean(gamelog$FG3A)
fg3_ratio <<- fg3m/fgm
ftm <<- mean(gamelog$FTM)
fta <<- mean(gamelog$FTA)
ft_pct <<- mean(gamelog$FT_PCT)
}
retrievals()
# player retrievals
min <- mean(gamelog$MIN)
min
# player retrievals
min <- mean(gamelog$MIN)
pts <- mean(gamelog$PTS)
reb <- mean(gamelog$REB)
ast <- mean(gamelog$AST)
stl <- mean(gamelog$STL)
blk <- mean(gamelog$BLK)
tov <- mean(gamelog$TOV)
# averages of basic statistics found in gamelog
basic <- function() {
basic <- data.frame (
MIN = c(min),
PTS = c(pts),
REB = c(reb),
AST = c(ast),
STL = c(stl),
BLK = c(blk),
TOV = c(tov),
PF = c(pf)
)
print(basic)
}
basic()
# SETUP
new_player <- function(player_input) {
player_name <<- player_input
setwd("~/sinix-model/csv/players")
filename <<- paste(player_name, ".csv", sep="")
if (file.exists(filename) == FALSE) {
print("File not found! Reload")
run()
} else {
gamelog <<- read.csv(filename)
return("Player successfully loaded")
}
}
new_player("Jordan Poole")
setwd
setwd()
setwd("~/sinix-model/csv/players")
setwd("~/sinix-model/csv/players/")
setwd("~/Desktop/sinix-model/csv/players/")
# SETUP
new_player <- function(player_input) {
player_name <<- player_input
setwd("~/Desktop/sinix-model/csv/players")
filename <<- paste(player_name, ".csv", sep="")
if (file.exists(filename) == FALSE) {
print("File not found! Reload")
run()
} else {
gamelog <<- read.csv(filename)
return("Player successfully loaded")
}
}
new_player()
new_player("Jordan Poole")
# SETUP
new_player <- function(player_input) {
player_name <<- player_input
setwd("~/Desktop/sinix-model/csv/players")
filename <<- paste(player_name, ".csv", sep="")
if (file.exists(filename) == FALSE) {
print("File not found! Reload")
run()
} else {
gamelog <<- read.csv(filename)
setwd("~/Desktop/sinix-model/")
return("Player successfully loaded")
}
}
new_player("Jordan Poole")
new_team <- function(team_input) {
team_name <<- team_input
setwd("~/sinix-model/csv/teams")
team_filename <<- paste(team_name, ".csv", sep="")
if (file.exists(filename) == FALSE) {
print("File not found! Reload")
run()
} else {
team_gamelog <<- read.csv(team_filename)
setwd("~/Desktop/sinix-model/")
return("Team successfully loaded")
}
}
new_team("GSW")
new_team <- function(team_input) {
team_name <<- team_input
setwd("~/Desktop/sinix-model/csv/teams")
team_filename <<- paste(team_name, ".csv", sep="")
if (file.exists(filename) == FALSE) {
print("File not found! Reload")
run()
} else {
team_gamelog <<- read.csv(team_filename)
setwd("~/Desktop/sinix-model/")
return("Team successfully loaded")
}
}
new_team("GSW")
new_team("GSW")
team_name
team_filename
ls
new_team <- function(team_input) {
team_name <<- team_input
setwd("~/Desktop/sinix-model/csv/teams")
team_filename <<- paste(team_name, ".csv", sep="")
if (file.exists(filename) == FALSE) {
print("File not found! Reload")
} else {
team_gamelog <<- read.csv(team_filename)
setwd("~/Desktop/sinix-model/")
return("Team successfully loaded")
}
}
new_team("GSW")
new_team <- function(team_input) {
team_name <<- team_input
setwd("~/Desktop/sinix-model/csv/teams")
team_filename <<- paste(team_name, ".csv", sep="")
if (file.exists(filename) == FALSE) {
print(team_filename)
print("File not found! Reload")
} else {
team_gamelog <<- read.csv(team_filename)
setwd("~/Desktop/sinix-model/")
return("Team successfully loaded")
}
}
new_team("GSW")
new_team("TOR")
wd
wd()
team_filename
new_team <- function(team_input) {
team_name <<- team_input
setwd("~/Desktop/sinix-model/csv/teams")
team_filename <<- paste(team_name, ".csv", sep="")
if (file.exists(team_filename) == FALSE) {
print(team_filename)
print("File not found! Reload")
} else {
team_gamelog <<- read.csv(team_filename)
setwd("~/Desktop/sinix-model/")
return("Team successfully loaded")
}
}
new_team("GSW")
# averages of basic statistics found in gamelog
basic <- function() {
min <- mean(gamelog$MIN) # avg min
pts <- mean(gamelog$PTS) # avg pts
reb <- mean(gamelog$REB) # avg reb
ast <- mean(gamelog$AST) # avg ast
stl <- mean(gamelog$STL) # avg stl
blk <- mean(gamelog$BLK) # avg blk
tov <- mean(gamelog$TOV) # avg tov
pf <- mean(gamelog$PF) # avg player fouls
basic <- data.frame (
MIN = c(min),
PTS = c(pts),
REB = c(reb),
AST = c(ast),
STL = c(stl),
BLK = c(blk),
TOV = c(tov),
PF = c(pf)
)
print(basic)
}
basic()
setwd("~/sinix-model/")
library(dplyr)
player_name <- NULL;
filename <- NULL;
gamelog <- NULL;
player_input <- NULL;
filter_input <- NULL;
# SETUP
new_player <- function(player_input) {
# name <- readline(prompt="Enter player name: ")
player_name <<- player_input
filename <<- paste(player_name, ".csv", sep="")
if (file.exists(filename) == FALSE) {
print("File not found! Reload")
} else {
gamelog <<- read.csv(filename)
return("Successfully loaded")
}
}
# filter by home or away
filter_court <- function() {
court <- readline(prompt="Enter filter [HOME/AWAY]: ")
if (court == "HOME") {
gamelog <<- filter(gamelog, grepl('vs.', MATCHUP))
} else if (court == "AWAY") {
gamelog <<- filter(gamelog, grepl('@', MATCHUP))
}
return(gamelog)
}
filter_opponent <- function() {
opponent <- readline(prompt="What opponent to filter? e.g. DAL, NYK, TOR: ")
gamelog <<- filter(gamelog, grepl(opponent, MATCHUP))
return(gamelog)
}
# last games
filter_last <- function() {
number <- readline(prompt="How many past games to filter? e.g. 5 for last 5 games: ")
gamelog <<- gamelog[1:number, ]
return(gamelog)
}
filter_min <- function() {
minmax <- readline(prompt="Filtering max/min minutes played? [MAX/MIN]: ")
if (minmax == "MIN") {
minimum <- readline(prompt="Minimum # of minutes played? ")
gamelog <<- filter(gamelog, MIN > minimum)
} else if (minmax == "MAX") {
maximum <- readline(prompt="Maximum # of minutes played? ")
gamelog <<- filter(gamelog, MIN < maximum)
}
return(gamelog)
}
# resets gamelog without filters
reset <- function() {
gamelog <<- read.csv(filename)
print("Gamelog reset.")
menu()
}
# gamelog
view_gamelog <- function() {
print(gamelog)
}
#  name of player
name <- function() {
name <- data.frame (
NAME = c(player_name)
)
print(name)
}
# averages of points, rebounds, assists
avg_pra <- function() {
pts <- mean(gamelog$PTS)
reb <- mean(gamelog$REB)
ast <- mean(gamelog$AST)
avg_pra <- data.frame (
PTS = c(pts),
REB = c(reb),
AST = c(ast)
)
print(avg_pra)
}
# all rebound averages and ratio of offensive/defensive rebounds to total rebounds
avg_reb_type <- function() {
reb <- mean(gamelog$REB)
oreb <- mean(gamelog$OREB)
dreb <- mean(gamelog$DREB)
oreb_pct <- oreb/reb
dreb_pct <- dreb/reb
avg_reb_type <- data.frame (
REB = c(reb),
OREB_PCT = c(oreb_pct),
DREB_PCT = c(dreb_pct)
)
print(avg_reb_type)
}
# all field goal averages made and ratio of threes made to field goals made
avg_fg_type <- function() {
fgm <- mean(gamelog$FGM)
fga <- mean(gamelog$FGA)
fg3m <- mean(gamelog$FG3M)
fg3a <- mean(gamelog$FG3A)
fg_pct <- mean(gamelog$FG_PCT)
fg3_pct <- mean(gamelog$FG3_PCT)
fg3_ratio <- fg3m/fgm
avg_fg_type <- data.frame (
FGM = c(fgm),
FGA = c(fga),
FG3M = c(fg3m),
FG3A = c(fg3a),
FG_PCT = c(fg_pct),
FG3_PCT = c(fg3_pct),
FG3_RATIO = c(fg3_ratio)
)
print(avg_fg_type)
}
# RUN
run <- function() {
welcome <- readline(prompt="Analyze new player? [Y/N]: ")
if (welcome == "Y") {
player_input <<- readline("Enter full name of player, e.g. Anthony Edwards, LeBron James, Anthony Davis: ")
new_player(player_input)
menu()
} else {
print("Key not recognized.")
run()
}
}
new_player()
new_player("Buddy Hield")
new_player("Buddy Hield")
setwd("~/Desktop/sinix-model/csv/players/")
new_player("Buddy Hield")
analysis()
analysis <- function() {
avg_pra()
avg_fg_type()
avg_reb_type()
}
analysis()
filter_last()
analysis()
reset()
reset()
filter_last()
reset()
filter_court()
filter_last()
analysis()
reset()
# resets gamelog without filters
reset <- function() {
gamelog <<- read.csv(filename)
print("Gamelog reset.")
# menu()
}
reset()
analysis()
reset()
filter_team()
filter_opp()
filter_opponent <- function() {
opponent <- readline(prompt="What opponent to filter? e.g. DAL, NYK, TOR: ")
gamelog <<- filter(gamelog, grepl(opponent, MATCHUP))
return(gamelog)
}
filter_opponent()
analysis()
reset()
mean(gamelog$MIN)
filter_min
filter_min()
analysis()
run_new <- function() {
analysis()
reset()
filter_last()
analysis()
reset()
filter_court()
filter_last()
analysis()
reset()
filter_team()
analysis()
reset()
mean(gamelog$MIN)
filter_min()
analysis()
}
new_player("Buddy Hield")
run_new()
run_new()
run_new <- function() {
analysis()
reset()
filter_last()
analysis()
reset()
filter_court()
filter_last()
analysis()
reset()
filter_opp()
analysis()
reset()
mean(gamelog$MIN)
filter_min()
analysis()
}
run_new <- function(name) {
new_player(name)
analysis()
reset()
filter_last()
analysis()
reset()
filter_court()
filter_last()
analysis()
reset()
filter_opp()
analysis()
reset()
mean(gamelog$MIN)
filter_min()
analysis()
}
run_new('Bam Adebayo')
run_new <- function(name) {
new_player(name)
analysis()
reset()
filter_last()
analysis()
reset()
filter_court()
filter_last()
analysis()
reset()
filter_opponent()
analysis()
reset()
mean(gamelog$MIN)
filter_min()
analysis()
}
run_new('Bam Adebayo')
run_new('Bam Adebayo')
run_new('Bam Adebayo')
gamelog
mean(gamelog$MIN)
run_new('Bam Adebayo')
new_player('Desmond Bane')
mean(gamelog$MIN)
run_new('Desmond Bane')
